(defun close-to-prev ()
  (interactive)
  (let (ventana-pdf (selected-window))
    (kill-buffer (current-buffer))
    (select-window ventana-latex)
    (delete-window ventana-pdf)))

(defun compile-bibtex (nombre-base ruta-salida nombre-latex)
  (let ((ruta-final-completa (concat ruta-salida "/" nombre-base ".bib"))
        (ruta-base-completa (expand-file-name (concat default-directory nombre-base ".bib")))
        (ruta-inicial default-directory))
    (message ruta-base-completa)
    (if (file-exists-p ruta-base-completa)
        (progn
          (call-process "ln" nil nil nil "-sf" ruta-base-completa ruta-final-completa)
          (setq default-directory (expand-file-name ruta-salida))
          (call-process "bibtex" nil nil nil nombre-base)
          (setq default-directory ruta-inicial)
          (call-process "pdflatex" nil nil nil "-shell-escape" "-output-directory" "output" nombre-latex)
          (call-process "pdflatex" nil nil nil "-shell-escape" "-output-directory" "output" nombre-latex)
          ))))

(defun compile-view-latex ()
  (interactive)
  (let ((nombre-latex (buffer-file-name))
        (nombre-pdf)
        (nombre-base)
        (salida-comando)
        (nombre-buffer-error (concat "*" (generate-new-buffer-name "pdflatex log") "*")))
    (if (not (file-exists-p "output"))
        (make-directory "output"))
    (setq salida-comando (call-process "pdflatex" nil nombre-buffer-error nil "-shell-escape" "-output-directory" "output" nombre-latex))
    (setq ventana-latex (selected-window))
    (if (= salida-comando 0)
        (progn
          (setq nombre-pdf (split-string nombre-latex "[.]"))
          (setq nombre-pdf (reverse nombre-pdf))
          (setq nombre-pdf (cdr nombre-pdf))
          (setq nombre-pdf (reverse nombre-pdf))
          (setq nombre-base (file-name-nondirectory (car nombre-pdf)))
          (compile-bibtex nombre-base "output" nombre-latex)
          (setq nombre-pdf (concat (car nombre-pdf) ".pdf"))
          (setq nombre-pdf (split-string nombre-pdf "[/]"))
          (setq nombre-pdf (reverse nombre-pdf))
          (setq nombre-pdf (car nombre-pdf))
          (setq nombre-pdf (concat "output/" nombre-pdf))
          (setq ventana-pdf (split-window-right))
          (select-window ventana-pdf)
          (find-file nombre-pdf)
          (local-set-key (kbd "C-x k") 'close-to-prev))
      (progn
        (select-window (split-window-right))
        (switch-to-buffer nombre-buffer-error)
        (local-set-key (kbd "C-x k") 'close-to-prev)))))




(add-hook 'latex-mode-hook
          '(lambda ()
             (local-set-key (kbd "C-c C-c") 'compile-view-latex)))
